Implement a Jump Search algorithm in Java to efficiently search for a target value in a sorted array.

----------------------------------------------------------------------

package Day4;

import java.util.Scanner;

public class JumpSearch {
	public static int jumpsearch(int[] arr,int target) {
		int len=arr.length;
		int step=(int)Math.floor(Math.sqrt(len));
		
		int prev=0;
		while(arr[Math.min(step, len)-1]<target) {
			prev=step;
			step+=(int)Math.floor(Math.sqrt(len));
			if(prev>=len) {
				return -1;
			}
		}
		
		while(arr[prev]<target) {
			prev++;
			if(prev==Math.min(step, len)) {
				return -1;
			}
		}
		
		if(arr[prev]==target) {
			return prev;
		}
		return -1;
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc=new Scanner(System.in);
		int[] arr=new int[10];
		for(int i=0;i<10;i++) {
			System.out.println("Enter element at "+(i+1)+" position:");
			arr[i]=sc.nextInt();
		}
		System.out.println("Enter the target element: ");
		int target=sc.nextInt();
		
		int flag=jumpsearch(arr,target);
		if(flag==-1) {
			System.out.println("Target Not Found!");
		}
		else {
			System.out.println("Target Found at "+(flag+1)+" position");
		}
		sc.close();
	}

}
